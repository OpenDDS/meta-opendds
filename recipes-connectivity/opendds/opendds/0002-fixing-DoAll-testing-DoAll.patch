From e565d7fb4d9d83884afd38e89864b597241d00eb Mon Sep 17 00:00:00 2001
From: Jan Vermaete <jan.vermaete@gmail.com>
Date: Sat, 30 Dec 2023 14:30:02 +0100
Subject: [PATCH 2/2] fixing DoAll -> testing::DoAll

| ...3.26.1/recipe-sysroot/usr/include/gmock/gmock-actions.h:1783:61: note: 'testing::DoAll' declared here
|  1783 | internal::DoAllAction<typename std::decay<Action>::type...> DoAll(
|       |                                                             ^~~~~

Upstream-Status: Accepted [https://github.com/OpenDDS/OpenDDS/commit/cccdfcf53857e75ec479a0465a1318b669951290]

Signed-off-by: Jan Vermaete <jan.vermaete@gmail.com>
---
 tests/unit-tests/dds/DCPS/Qos_Helper.cpp | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/tests/unit-tests/dds/DCPS/Qos_Helper.cpp b/tests/unit-tests/dds/DCPS/Qos_Helper.cpp
index 53e2cb30d..0d6cb1c55 100644
--- a/tests/unit-tests/dds/DCPS/Qos_Helper.cpp
+++ b/tests/unit-tests/dds/DCPS/Qos_Helper.cpp
@@ -1457,7 +1457,7 @@ TEST(dds_DCPS_Qos_Helper, DataWriterQosBuilder_Publisher_ctor)
   qos.reliability_best_effort();
   OpenDDS::DCPS::RcHandle<OpenDDS::Test::MockPublisher> publisher = OpenDDS::DCPS::make_rch<OpenDDS::Test::MockPublisher>();
   EXPECT_CALL(*publisher, get_default_datawriter_qos(testing::_))
-    .WillOnce(DoAll(testing::SetArgReferee<0>(qos.qos()), testing::Return(DDS::RETCODE_OK)));
+    .WillOnce(testing::DoAll(testing::SetArgReferee<0>(qos.qos()), testing::Return(DDS::RETCODE_OK)));
   DDS::Publisher_var publisher_var = DDS::Publisher::_duplicate(publisher.in());
   OpenDDS::DCPS::DataWriterQosBuilder uut(publisher_var);
   EXPECT_EQ(qos, uut);
@@ -1513,12 +1513,12 @@ TEST(dds_DCPS_Qos_Helper, DataWriterQosBuilder_Topic_ctor)
 
   OpenDDS::DCPS::RcHandle<OpenDDS::Test::MockTopic> topic = OpenDDS::DCPS::make_rch<OpenDDS::Test::MockTopic>();
   EXPECT_CALL(*topic, get_qos(testing::_))
-    .WillOnce(DoAll(testing::SetArgReferee<0>(topic_qos.qos()), testing::Return(DDS::RETCODE_OK)));
+    .WillOnce(testing::DoAll(testing::SetArgReferee<0>(topic_qos.qos()), testing::Return(DDS::RETCODE_OK)));
   DDS::Topic_var topic_var = DDS::Topic::_duplicate(topic.in());
 
   OpenDDS::DCPS::RcHandle<OpenDDS::Test::MockPublisher> publisher = OpenDDS::DCPS::make_rch<OpenDDS::Test::MockPublisher>();
   EXPECT_CALL(*publisher, get_default_datawriter_qos(testing::_))
-    .WillOnce(DoAll(testing::SetArgReferee<0>(datawriter_qos.qos()), testing::Return(DDS::RETCODE_OK)));
+    .WillOnce(testing::DoAll(testing::SetArgReferee<0>(datawriter_qos.qos()), testing::Return(DDS::RETCODE_OK)));
   EXPECT_CALL(*publisher, copy_from_topic_qos(testing::_, testing::_))
     .WillOnce(testing::DoAll(testing::Invoke(copy_from_topic1), testing::Return(DDS::RETCODE_OK)));
   DDS::Publisher_var publisher_var = DDS::Publisher::_duplicate(publisher.in());
@@ -1927,7 +1927,7 @@ TEST(dds_DCPS_Qos_Helper, DataReaderQosBuilder_Subscriber_ctor)
   qos.reliability_best_effort();
   OpenDDS::DCPS::RcHandle<OpenDDS::Test::MockSubscriber> subscriber = OpenDDS::DCPS::make_rch<OpenDDS::Test::MockSubscriber>();
   EXPECT_CALL(*subscriber, get_default_datareader_qos(testing::_))
-    .WillOnce(DoAll(testing::SetArgReferee<0>(qos.qos()), testing::Return(DDS::RETCODE_OK)));
+    .WillOnce(testing::DoAll(testing::SetArgReferee<0>(qos.qos()), testing::Return(DDS::RETCODE_OK)));
   DDS::Subscriber_var subscriber_var = DDS::Subscriber::_duplicate(subscriber.in());
   OpenDDS::DCPS::DataReaderQosBuilder uut(subscriber_var);
   EXPECT_EQ(qos, uut);
@@ -1979,12 +1979,12 @@ TEST(dds_DCPS_Qos_Helper, DataReaderQosBuilder_Topic_ctor)
 
   OpenDDS::DCPS::RcHandle<OpenDDS::Test::MockTopic> topic = OpenDDS::DCPS::make_rch<OpenDDS::Test::MockTopic>();
   EXPECT_CALL(*topic, get_qos(testing::_))
-    .WillOnce(DoAll(testing::SetArgReferee<0>(topic_qos.qos()), testing::Return(DDS::RETCODE_OK)));
+    .WillOnce(testing::DoAll(testing::SetArgReferee<0>(topic_qos.qos()), testing::Return(DDS::RETCODE_OK)));
   DDS::Topic_var topic_var = DDS::Topic::_duplicate(topic.in());
 
   OpenDDS::DCPS::RcHandle<OpenDDS::Test::MockSubscriber> subscriber = OpenDDS::DCPS::make_rch<OpenDDS::Test::MockSubscriber>();
   EXPECT_CALL(*subscriber, get_default_datareader_qos(testing::_))
-    .WillOnce(DoAll(testing::SetArgReferee<0>(datareader_qos.qos()), testing::Return(DDS::RETCODE_OK)));
+    .WillOnce(testing::DoAll(testing::SetArgReferee<0>(datareader_qos.qos()), testing::Return(DDS::RETCODE_OK)));
   EXPECT_CALL(*subscriber, copy_from_topic_qos(testing::_, testing::_))
     .WillOnce(testing::DoAll(testing::Invoke(copy_from_topic2), testing::Return(DDS::RETCODE_OK)));
   DDS::Subscriber_var subscriber_var = DDS::Subscriber::_duplicate(subscriber.in());
-- 
2.39.2

